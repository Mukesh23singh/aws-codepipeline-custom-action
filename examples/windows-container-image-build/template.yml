AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: Windows Server container CI/CD pipeline
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: "General"
        Parameters: 
          - ProjectId
    ParameterLabels: 
      ProjectId:         
        default: "Project ID"

Parameters: 
    # You can provide these parameters in your CreateProject API call.
  ProjectId:
    Type: String
    Description: Prefix that will be used for AWS resources generated by the template.
    Default: windows-container-cicd

  # Custom Action
  CustomActionProviderName:
    Type: String
    Description: Name of the custom action provider (used in CodePipeline Console UI).
  CustomActionProviderCategory:
    Type: String
    Description: Category of the custom action provider (used in CodePipeline Console UI).
    AllowedValues:
      - Build
      - Deploy
      - Invoke
      - Test
  CustomActionProviderVersion:
    Type: String
    Description: Version of the custom action provider (used in CodePipeline Console UI).

  # GitHub details
  GitHubAccount:
    Type: String
    Description: Owner of GitHub account (person or organization) to be used.
  GitHubAccessToken:
    Type: String
    Description: GitHub access token value
    NoEcho: true
  GitHubRepositoryName:
    Type: String
    Description: Name of the GitHub repository to monitor.    
  GitHubBranch:
    Type: String
    Description: Name of the GitHub branch to monitor. 

Resources: 

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Description:  Amazon S3 bucket for AWS CodePipeline artifacts
    Properties:
      BucketName: !Sub "${ProjectId}-${AWS::AccountId}-${AWS::Region}-artifacts"
      VersioningConfiguration:
        Status: Enabled  

  # Role for CI/CD pipeline execution
  CodePipelineRole:
    Type: AWS::IAM::Role
    Description: Creating service role in IAM for AWS CodePipeline
    Properties:
      RoleName: !Sub "${ProjectId}-codepipeline-role"
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Sid: 1
      Path: /
      Policies:
      - PolicyName: !Sub "${ProjectId}-codepipeline-policy"
        PolicyDocument:
          Statement:
          # Your pipeline will generally need permissions to store and retrieve artifacts in Amazon S3.
          # It will also need permissions to detect changes to your repository, start
          # a build against your AWS CodeBuild project, and create an AWS CloudFormation stack
          # containing your runtime resources.
          - Action:
            - s3:*
            - codecommit:*
            - codebuild:*
            - cloudformation:*
            Effect: Allow
            Resource: '*'

  WindowsContainerPipeline:
    Type: AWS::CodePipeline::Pipeline    
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    DependsOn:
    - ArtifactsBucket 
    Properties:
      Name: !Sub "${ProjectId}-${GitHubBranch}-pipeline"
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3      
      RoleArn: !Sub "${CodePipelineRole.Arn}"
      Stages:
      - Name: Source
        Actions:
        - Name: Retrieve-Source-Code
          RunOrder: 1
          ActionTypeId:
            Category: Source
            Owner: ThirdParty            
            Provider: GitHub
            Version: 1
          Configuration:
            Owner: !Ref GitHubAccount
            Repo: !Ref GitHubRepositoryName
            Branch: !Ref GitHubBranch
            OAuthToken: !Ref GitHubAccessToken
            PollForSourceChanges: false              
          OutputArtifacts:
            - Name: Source

      - Name: Package
        Actions:
        - Name: Publish-Docker-Image
          RunOrder: 1
          ActionTypeId:
            Owner: Custom
            Category: !Ref CustomActionProviderCategory
            Provider: !Ref CustomActionProviderName              
            Version: !Ref CustomActionProviderVersion
          Configuration:
            ImageId: ami-0008603c05596a01f
            InstanceType: t3.large
            Command: build-and-publish-docker-image.ps1
          InputArtifacts:
            - Name: Source
